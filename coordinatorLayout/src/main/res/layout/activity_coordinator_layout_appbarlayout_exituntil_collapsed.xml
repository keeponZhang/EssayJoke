<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
                                                 xmlns:app="http://schemas.android.com/apk/res-auto"
                                                 xmlns:tools="http://schemas.android.com/tools"
                                                 android:layout_width="match_parent"
                                                 android:layout_height="match_parent"
                                                 >

	<android.support.design.widget.AppBarLayout
		android:background="#0000df"
		android:layout_width="match_parent"
		android:layout_height="wrap_content">

		<android.support.v7.widget.Toolbar
			android:gravity="bottom"
			android:id="@+id/toolbar"
			android:layout_width="match_parent"
			android:minHeight="?android:attr/actionBarSize"
			android:layout_height="200dp"
			app:layout_scrollFlags="scroll|enterAlways|exitUntilCollapsed" />
		<!--scroll:值设为scroll的View会跟随滚动事件一起发生移动。就好像这个View也是属于这个ScrollView一样。-->
		<!--enterAlways:值设为enterAlways的View,当ScrollView往下滚动时，该View会直接往下滚动。而不用考虑ScrollView是否在滚动。-->
		<!--exitUntilCollapsed：值设为exitUntilCollapsed的View，当这个View要往上逐渐“消逝”时，会一直往上滑动，直到剩下的的高度达到它的最小高度后，再响应ScrollView的内部滑动事件。-->

<!--		android:minHeight="?android:attr/actionBarSize"  去掉这个并不会变成0-->

		<!--手指向上移动的时候，会优先收起AppBarLayout中的子View，而收起的最小高度为0，假如希望它在收起时仍然保留部分可见，那么就需要使用exitUntilCollapsed + minHeight属性，minHeight就决定了收起时的最小高度是多少，也就是Collapsed状态。
		作者：泽毛
		链接：https://www.jianshu.com/p/d4fd636d7c44
		来源：简书
		简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。-->
	</android.support.design.widget.AppBarLayout>
	<android.support.v4.widget.NestedScrollView
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		app:layout_behavior="@string/appbar_scrolling_view_behavior"
		>
<!--nestedScrollview加了这个behavior,更顺-->
		<TextView
			android:layout_width="match_parent"
			android:layout_height="wrap_content"
			android:text="@string/my_txt"
			android:textSize="20sp" />

	</android.support.v4.widget.NestedScrollView>

</android.support.design.widget.CoordinatorLayout>
